# name: Test and Deploy
# on:
# - push
# jobs:
#   test:
#     name: Run Tests
#     container: 
#       image: vapor/swift:5.1
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - run: swift test --enable-test-discovery --sanitize=thread
#   deploy:
#     needs: test
#     name: Deploy
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/master'
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: eu-west-1

#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1

#     - name: Build, tag, and push image to Amazon ECR
#       id: build-image
#       env:
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         ECR_REPOSITORY: sss-conf-site
#         IMAGE_TAG: ${{ github.sha }}
#       run: |
#         # Build a docker container and
#         # push it to ECR so that it can
#         # be deployed to ECS.
#         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f web.Dockerfile .
#         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#         echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

#     - name: Fill in the new image ID in the Amazon ECS task definition
#       id: task-def
#       uses: aws-actions/amazon-ecs-render-task-definition@v1
#       with:
#         task-definition: deploy/task-def.json
#         container-name: sss-conf-service
#         image: ${{ steps.build-image.outputs.image }}

#     - name: Deploy Amazon ECS task definition
#       uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#       with:
#         task-definition: ${{ steps.task-def.outputs.task-definition }}
#         service: sss-conf-site
#         cluster: sss-conf-cluster
#         wait-for-service-stability: true
